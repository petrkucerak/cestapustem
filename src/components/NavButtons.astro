---
import { getCollection } from "astro:content";
import Button from "./Button.astro";

// Fetch the collection of pages
const pagesData = await getCollection("den");

// Extract slugs (dates) from pagesData
const availablePages = pagesData.map((page) => page.slug);
---

<div
  id="navigation-buttons"
  class="mx-6 flex flex-row justify-around mt-6"
  data-pages={JSON.stringify(availablePages)}
>
  <!-- Navigation buttons hidden by default -->
  <Button
    id="yesterday-button"
    href="#"
    className="hidden bg-violet-light"
    target="_self"
    content="VČERA"
  />
  <Button
    id="today-button"
    href="#"
    className="hidden bg-violet-dark"
    target="_self"
    content="DNES"
  />
  <Button
    id="tomorrow-button"
    href="#"
    className="hidden bg-violet-light"
    target="_self"
    content="ZÍTRA"
  />
</div>

<script>
  // @ts-nocheck
  // Function to format a date into yyyy-mm-dd
  const formatDate = (date) => date.toISOString().split("T")[0];

  // Get today, yesterday, and tomorrow
  const today = new Date();
  const yesterday = new Date(today);
  const tomorrow = new Date(today);

  yesterday.setDate(today.getDate() - 1);
  tomorrow.setDate(today.getDate() + 1);

  const dates = {
    yesterday: formatDate(yesterday),
    today: formatDate(today),
    tomorrow: formatDate(tomorrow),
  };

  // Get available pages from the data attribute
  const availablePages = new Set(
    JSON.parse(document.getElementById("navigation-buttons").dataset.pages)
  );

  // Check if a page is available
  const isPageAvailable = (date) => availablePages.has(date);

  // Update buttons if corresponding pages exist
  const updateButton = (id, date) => {
    const button = document.getElementById(id);
    if (isPageAvailable(date)) {
      button.href = `/den/${date}`;
      button.classList.remove("hidden");
    }
  };

  // Run the update for each button
  updateButton("yesterday-button", dates.yesterday);
  updateButton("today-button", dates.today);
  updateButton("tomorrow-button", dates.tomorrow);
</script>
